{"version":3,"sources":["BubbleComponent.tsx","index.tsx"],"names":["D3_DIV_ID","BubbleComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","componentDidMount","_this$get_dimensions","get_dimensions","_this$get_dimensions2","_slicedToArray","width","height","margin","svg","d3","append","attr","left","right","top","bottom","container","node","parentNode","parseInt","style","aspect","resize","targetWidth","Math","round","Streamlit","setFrameHeight","window","on","render","props","_jsxs","children","_jsx","id","className","_createClass","key","value","table","this","data","num_columns","columns","_loop","rowIndex","row","map","columnIndex","_table$getCell","getCell","content","classNames","type","toString","push","index","episode","act","chapter","segment","start_time","parseFloat","end_time","viewership","rows","metadata","theme","_document$getElementB","_document$getElementB2","_this2","get_data","get_metadata","_this$get_dimensions3","_this$get_dimensions4","colour","select","chapterXaxis","chapter_order","d","i","NUM_CHAPTERS","Object","keys","time_sorted_data","sort","a","b","x","domain","range","y","radius","sqrt","PI","xAxis","yAxis","tick_strings","ticks","tickFormat","tickSize","selectAll","tooltip","doSwapView","empty","join","event","target","text","pageY","pageX","metric","MAX_TIME_POWER10","pow","floor","log10","legendDomain","legendRange","legendRadiusScale","sizeLegend","legend","legendSize","ascending","title","shape","shapePadding","labelOffset","orient","scale","zoom","scaleExtent","extent","isNaN","transform","k","newY","rescaleY","animateRippleButton","clientX","offsetLeft","clientY","offsetTop","ripple","document","createElement","setTimeout","remove","getElementById","dispatchEvent","WheelEvent","deltaY","swapView","showAll","chapter_button_container","swapShowChapter","backgroundHex","replace","bgLuminance","substr","max","min","getReadableTextColor","duration","undefined","chapterX","transition","toChapterView","maxEpisode","each","episodeX","toEpisodeView","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode"],"mappings":"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","file":"static/js/main.3efd0195.chunk.js","sourcesContent":["import {\n  ArrowTable,\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport * as d3 from \"d3\"\nimport legend from 'd3-svg-legend'\nimport \"./BubbleComponent.scss\"\n\nvar D3_DIV_ID: string;\n\ntype dataObj = {\n  index: number,\n  episode: number,\n  act: string,\n  chapter: string,\n  segment: string,\n  start_time: number,\n  end_time: number,\n  viewership: number\n}\n\n/**\n * This is a React-based component template. The `render()` function is called\n * automatically when your component should be re-rendered.\n */\nclass BubbleComponent extends StreamlitComponentBase {\n  private get_data(): dataObj[] {\n    const table: ArrowTable = this.props.args[\"data\"];\n\n    var data : dataObj[] = [];\n    const num_columns = table.columns;\n    // Itterate from 1 because of headerRow\n    for (let rowIndex = 1; rowIndex < table.rows; rowIndex++) {\n      const row = d3.range(0, num_columns).map((columnIndex) => {\n        const { classNames, content, id, type } = table.getCell(rowIndex, columnIndex);\n        return content?.toString()\n      });\n\n      data.push({index:rowIndex,\n        episode:parseInt(row[1]),\n        act:row[2],\n        chapter:row[3],\n        segment:row[4],\n        start_time:parseFloat(row[5]),\n        end_time:parseFloat(row[6]),\n        viewership:parseFloat(row[7])});\n    }\n\n    return data;\n  }\n\n  private get_metadata() {\n    return this.props.args.metadata\n  }\n\n  private get_theme() {\n    return this.props.theme\n  }\n\n  private get_dimensions(): [number, number, {top:number, right:number, bottom:number, left:number}] {\n    // set the dimensions and margins of the graph\n    const margin = {top: 80, right: 150, bottom: 80, left: 80},\n          width = 1200 - margin.left - margin.right,\n          height = 600 - margin.top - margin.bottom;\n\n    return [width, height, margin]\n  }\n\n\n\n  public componentDidMount = (): void => {\n    const [width, height, margin] = this.get_dimensions();\n\n    function resizeToFit(svg) {\n      // get container + svg aspect ratio\n      var container = d3.select(svg.node().parentNode),\n          width = parseInt(svg.style(\"width\")),\n          height = parseInt(svg.style(\"height\")),\n          aspect = width / height;\n\n      // add viewBox and preserveAspectRatio properties,\n      // and call resize so that svg resizes on inital page load\n      svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\n          .attr(\"perserveAspectRatio\", \"xMinYMid\")\n          .call(resize);\n\n      d3.select(window).on(\"resize.\" + container.attr(\"id\"), resize);\n\n      // get width of container and resize svg to fit it\n      function resize() {\n          var targetWidth = parseInt(container.style(\"width\"));\n          svg.attr(\"width\", targetWidth);\n          svg.attr(\"height\", Math.round(targetWidth / aspect));\n          Streamlit.setFrameHeight();\n      }\n    }\n\n\n    const svg = d3.select(\"#\" + D3_DIV_ID)\n                  .append(\"svg\")\n                    .attr(\"width\", width + margin.left + margin.right)\n                    .attr(\"height\", height + margin.top + margin.bottom)\n                    .call(resizeToFit)\n                  .append(\"g\")\n                    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n    const clip = svg.append(\"defs\").append(\"svg:clipPath\")\n                    .attr(\"id\", \"clip\")\n                    .append(\"svg:rect\")\n                    .attr(\"width\", width )\n                    .attr(\"height\", height )\n                    .attr(\"x\", 0)\n                    .attr(\"y\", 0);\n\n    svg.append(\"rect\")\n        .attr(\"id\", \"zoomRect\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height)\n        .style(\"fill\", \"none\")\n        .style(\"pointer-events\", \"all\")\n        .attr('transform', 'translate(' + -margin.left + ',' + 0 + ')');\n\n    // Add axes\n    svg.append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .attr(\"id\", \"myXaxis\");\n    svg.append(\"g\")\n        .attr(\"id\", \"myYaxis\");\n\n    // Add tooltip\n    d3.select(\"body\")\n        .append(\"div\")\n        .attr(\"class\", \"svg-tooltip\")\n        .style(\"font-family\", `-apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple   Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`)\n        .style(\"border-radius\", \".1rem\")\n        .style(\"font-size\", \"14px\")\n        .style(\"max-width\", \"320px\")\n        .style(\"text-overflow\", \"ellipsis\")\n        .style(\"white-space\", \"pre\")\n        .style(\"z-index\", \"300\")\n        .style(\"background\", \"rgba(69,77,93,.9)\")\n        .style(\"color\", \"#fff\")\n        .style(\"display\", \"block\")\n        .style(\"padding\", \".2rem .4rem\")\n        .style(\"position\", \"absolute\")\n        .style(\"visibility\", \"hidden\");\n\n    svg.append(\"text\")\n        .attr(\"id\", \"yLabel\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -margin.left)\n        .attr(\"x\", -(height / 2))\n        .attr(\"dy\", \"1em\")\n        .style(\"font-size\", 20)\n        .style(\"text-anchor\", \"middle\");\n\n    svg.append(\"g\")\n        .attr(\"class\", \"legendSize\")\n        .attr(\"transform\", `translate(${width + 10}, 20)`);\n\n\n    // Ripple effect on buttons: https://codepen.io/dazar-dev/pen/QWNyKMO\n    function animateRippleButton(event) {\n      const ANIMATION_SPEED: number = 800\n\n        let x: number = event.clientX - event.target.offsetLeft\n        let y: number = event.clientY - event.target.offsetTop\n\n        const ripple: HTMLElement = document.createElement(\"div\")\n\n        ripple.style.left = x + \"px\"\n        ripple.style.top = y + \"px\"\n        event.target.append(ripple)\n\n        setTimeout(() => {\n          ripple.remove()\n        }, ANIMATION_SPEED)\n    }\n\n    Streamlit.setFrameHeight();\n  }\n\n\n\n  public componentDidUpdate(): void {\n    const data = this.get_data(),\n          metadata = this.get_metadata(),\n          [width, height, margin] = this.get_dimensions(),\n          colour = metadata.colour,\n          svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n\n\n    var chapterXaxis = {};\n\n    metadata.chapter_order.map((d, i) => {\n      if (!(d in chapterXaxis)) {\n        chapterXaxis[d] = i+1;\n      }\n    });\n\n    const NUM_CHAPTERS = Object.keys(chapterXaxis).length;\n\n    var time_sorted_data = data.sort((a, b) => {\n      if (a.end_time - a.start_time > b.end_time - b.start_time) {\n        return -1\n      }\n      else if (a.end_time - a.start_time < b.end_time - b.start_time) {\n        return 1\n      }\n      return 0\n    });\n\n    const x = d3.scaleLinear()\n                .domain([0, NUM_CHAPTERS+1])\n                .range([0, width]),\n          // y_domain_size = d3.max(data, d => d.viewership) - d3.min(data, d => d.viewership),\n          // y = d3.scaleLinear()\n          //       .domain([Math.max(0, d3.min(data, d => d.viewership) - y_domain_size * 0.1),\n          //                d3.max(data, d => d.viewership) + y_domain_size * 0.1 ])\n          //       .range([height, 0]);\n          y = d3.scaleLinear()\n                .domain([0, d3.max(data, d => d.viewership) * 1.1 ])\n                .range([height, 0]);\n\n    // The radius scales so that the area of the bubble represents the segment time.\n    // It is scaled so that in episode view the average bubble will take up half of its episodes space.\n    const radius = d3.scaleLinear()\n                    .domain([0, Math.sqrt(d3.mean(data, d => d.end_time - d.start_time)) / Math.PI])\n                    .range([0, (width / d3.max(data, d => d.episode) / 2 * 0.5)]);\n\n    const xAxis = d3.select(\"#myXaxis\"),\n          yAxis = d3.select(\"#myYaxis\");\n\n    var tick_strings = {};\n    Object.keys(chapterXaxis).map((d, i) => {\n      tick_strings[i+1] = d;\n    });\n\n    xAxis.call(d3.axisBottom(x)\n              .ticks(NUM_CHAPTERS)\n              .tickFormat(d =>tick_strings[d]));\n\n    yAxis.call(d3.axisLeft(y)\n                  .tickSize(-width));\n\n    yAxis.selectAll(\"text\")\n          .style(\"font-size\", \"15\");\n\n    const tooltip = d3.select(\"body\").select(\".svg-tooltip\");\n\n    var doSwapView = false;\n    if (!svg.select(\"#dataCircle\").empty()) {\n      if (svg.select(\"#dataCircle\").attr(\"view\") === \"episode\") {\n        doSwapView = true;\n      }\n      else {\n      }\n    }\n\n    svg.selectAll(\"#dataCircle\")\n        .data(time_sorted_data)\n        .join(\"circle\")\n          .attr(\"id\", \"dataCircle\")\n          .attr(\"view\", \"chapter\")\n          .attr(\"clip-path\", \"url(#clip)\")\n          .attr(\"r\", d => radius(Math.sqrt(d.end_time - d.start_time) / Math.PI))\n          .attr(\"cx\", d => x(chapterXaxis[d.chapter]))\n          .attr(\"cy\", d => y(d.viewership))\n          .attr(\"fill\", d => colour[d.chapter])\n          .style(\"opacity\", \"0.7\")\n          // .attr(\"focused\", true)\n          .style(\"pointer-events\", \"auto\")\n          .on(\"mouseover\", function(event, d) {\n            d3.select(event.target)\n              .attr(\"stroke-width\", \"1\")\n              .attr(\"stroke\", \"black\");\n\n            tooltip.style(\"visibility\", \"visible\")\n                    .text(`Viewership: ${Math.round(d.viewership)}\\nEpisode: ${d.episode}\\n` +\n                          `Act: ${d.act}\\nChapter: ${d.chapter}\\nSegment: ${d.segment}\\n` +\n                          `Start(s): ${d.start_time}\\nEnd(s): ${d.end_time}`);\n          })\n          .on(\"mousemove\", function(event) {\n            tooltip\n              .style(\"top\", event.pageY - 10 + \"px\")\n              .style(\"left\", event.pageX + 10 + \"px\");\n          })\n          .on(\"mouseout\", function(event) {\n            d3.select(event.target)\n              .attr(\"stroke-width\", null)\n              .attr(\"stroke\", null);\n\n            tooltip.style(\"visibility\", \"hidden\");\n          })\n          .attr(\"view\", \"chapter\");\n          // .on(\"click\", (event, d) => this.swapView(d.chapter, metadata.chapter_order));\n\n    svg.select(\"#yLabel\")\n        .text(`${metadata.metric}`);\n\n    const MAX_TIME_POWER10 = Math.pow(10, Math.floor(Math.log10(d3.max(data, d => (d.end_time - d.start_time))))),\n          legendDomain = [0.1, 0.25, 0.5, 1].map(d => d * MAX_TIME_POWER10),\n          legendRange = legendDomain.map(d => radius((Math.sqrt(d) / Math.PI)))\n\n\n    var legendRadiusScale = d3.scaleOrdinal()\n                              .domain(legendDomain.map(d => `${d}s`))\n                              .range(legendRange);\n\n    var sizeLegend = legend.legendSize()\n                            .ascending(true)\n                            .title(\"Segement Time\")\n                            // .titleWidth(100)\n                            .shape(\"circle\")\n                              .shapePadding(5)\n                              .labelOffset(10)\n                              .orient(\"vertical\")\n                              .scale(legendRadiusScale);\n\n    svg.select(\".legendSize\")\n        .call(sizeLegend)\n        .selectAll(\"circle\")\n          .style(\"opacity\", 0.5);\n\n    svg.select(\".legendSize\")\n        .selectAll(\"text\")\n        .style(\"font-size\", \"20\");\n\n\n    const zoomChart = (event) => {\n      if (isNaN(event.transform.k)) {\n        return\n      }\n      var newY = event.transform.rescaleY(y);\n      yAxis.call(d3.axisLeft(newY)\n                    .tickSize(-width))\n\n      yAxis.selectAll(\"text\")\n            .style(\"font-size\", \"15\");\n\n      svg.selectAll(\"#dataCircle\")\n          .attr('cy', function(d) {return newY(d.viewership)});\n    }\n\n    var zoom = d3.zoom()\n                  .scaleExtent([1, 20])\n                  .extent([[0, 0], [width, height]])\n                  .on(\"zoom\", zoomChart);\n\n    svg.select(\"#zoomRect\")\n        .call(zoom);\n\n    // This is to fix the zoom after updating the component with new data or option choices.\n    document.getElementById(\"zoomRect\")?.dispatchEvent(new WheelEvent(\"wheel\", {deltaY: 1}));\n    document.getElementById(\"zoomRect\")?.dispatchEvent(new WheelEvent(\"wheel\", {deltaY: -1}));\n\n    if (doSwapView) {\n      this.swapView(metadata.chapter_order, 0);\n    }\n\n    // Ripple effect on buttons: https://codepen.io/dazar-dev/pen/QWNyKMO\n    function animateRippleButton(event) {\n      const ANIMATION_SPEED: number = 800\n\n        let x: number = event.clientX - event.target.offsetLeft\n        let y: number = event.clientY - event.target.offsetTop\n\n        const ripple: HTMLElement = document.createElement(\"div\")\n\n        ripple.style.left = x + \"px\"\n        ripple.style.top = y + \"px\"\n        event.target.append(ripple)\n\n        setTimeout(() => {\n          ripple.remove()\n        }, ANIMATION_SPEED)\n    }\n\n    d3.select(\"#swap_view_button\")\n        .on(\"click\", (event) => {animateRippleButton(event); this.swapView(metadata.chapter_order)});\n\n    d3.select(\"#show_all_button\")\n      .on(\"click\", (event) => {animateRippleButton(event); this.showAll()});\n\n\n    // !!!CHATGPT\n    function getReadableTextColor(backgroundHex) {\n      // Remove the '#' symbol if present\n      backgroundHex = backgroundHex.replace('#', '');\n\n      // Parse the background hex color components\n      const bgRed = parseInt(backgroundHex.substr(0, 2), 16);\n      const bgGreen = parseInt(backgroundHex.substr(2, 2), 16);\n      const bgBlue = parseInt(backgroundHex.substr(4, 2), 16);\n\n      // Calculate the relative luminance of the background color\n      const bgLuminance = (0.299 * bgRed + 0.587 * bgGreen + 0.114 * bgBlue) / 255;\n\n      // Calculate the target luminance for the text color\n      const textLuminance = 0.1; // Adjust this value if desired\n\n      // Calculate the contrast ratio between the text and background colors\n      const contrastRatio = (Math.max(bgLuminance, textLuminance) + 0.05) / (Math.min(bgLuminance, textLuminance) + 0.05);\n\n      // If the contrast ratio is sufficient, return black or white accordingly\n      if (contrastRatio >= 4.5) {\n        return '#000000'; // Black\n      } else {\n        return '#FFFFFF'; // White\n      }\n    }\n\n    const chapter_button_container = d3.select(\"#chapter_button_container\");\n    const swapShowChapter = this.swapShowChapter\n    chapter_button_container\n      .selectAll(\".ripple_button\")\n      .data(Object.keys(chapterXaxis))\n      .join(\"a\")\n        .attr(\"id\", d => `show_${d}_button`)\n        .attr(\"class\", \"ripple_button\")\n        .style(\"background-color\", d => colour[d])\n        .style(\"color\", d => getReadableTextColor(colour[d]))\n        .text(d => d)\n        .on(\"click\", function(this: any, event, d) {\n                      d3.select(this).style(\"opacity\", d3.select(this).style(\"opacity\") === \"1\" ? \"0.5\": \"1\");\n                      swapShowChapter(d)\n                    });\n\n    Streamlit.setFrameHeight();\n  }\n\n\n\n  public render = (): ReactNode => {\n    D3_DIV_ID = \"bubble_component_\" + this.props.args[\"key\"];\n\n\n    return (\n      <span>\n        <div id={D3_DIV_ID}></div>\n\n        <div className=\"button_container\" id=\"chapter_button_container\"></div>\n        <div className=\"button_container\">\n          <a id=\"show_all_button\" className=\"ripple_button\">Show All</a>\n          <a id=\"swap_view_button\" className=\"ripple_button\">Swap View</a>\n        </div>\n\n      </span>\n    )\n  }\n\n\n  private swapView(chapter_order?, duration=800) {\n    const svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n\n    if (svg.select(\"#dataCircle\").attr(\"view\") === \"chapter\") {\n      toEpisodeView(duration);\n      return;\n    }\n    if (svg.select(\"#dataCircle\").attr(\"view\") === \"episode\") {\n      toChapterView(chapter_order, duration);\n      return;\n    }\n\n\n    function toEpisodeView(duration=800) {\n      const margin = {top: 80, right: 150, bottom: 80, left: 80},\n            width = 1200 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n      const svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n\n      var maxEpisode = 0;\n\n      svg.selectAll(\"#dataCircle\")\n          .each(function(d) {\n            if (d.episode > maxEpisode) {\n              maxEpisode = d.episode;\n            }\n          });\n\n      const episodeX = d3.scaleLinear()\n                      .domain([0, maxEpisode+1])\n                      .range([0, width])\n\n      const xAxis = d3.select(\"#myXaxis\");\n\n      xAxis.transition().duration(duration)\n            .call(d3.axisBottom(episodeX)\n                    .ticks(maxEpisode)\n                    .tickFormat(function(d) {if (d > 0 && d <= maxEpisode) { return `Episode ${d}` }}));\n\n      // if (typeof clickedChapter !== \"undefined\") {\n      //   svg.selectAll(\"#dataCircle\")\n      //       .attr(\"view\", \"episode\")\n      //       .attr(\"focused\", function(d) {\n      //         if (d.chapter === clickedChapter) {\n      //           return true;\n      //         }\n      //         return false;\n      //       })\n      //       .transition().duration(duration)\n      //         .style(\"opacity\", function(d) {\n      //           if (d.chapter === clickedChapter) {\n      //             return \"0.7\";\n      //           }\n      //           return \"0\";\n      //         })\n      //         .style(\"pointer-events\", function(d) {\n      //           if (d.chapter === clickedChapter) {\n      //             return \"auto\";\n      //           }\n      //           return \"none\";\n      //         })\n      //         .attr(\"cx\", d => episodeX(d.episode));\n\n        // d3.select(\"#chapter_button_container\")\n        //   .selectAll(\".ripple_button\")\n        //   .style(\"opacity\", function(this: any) {\n        //     if (d3.select(this).attr(\"id\") !== `show_${clickedChapter}_button`) {\n        //       d3.select(this).style(\"opacity\", \"0.5\");\n        //       return \"0.5\"\n        //     }\n        //   });\n      // }\n      // else {\n        svg.selectAll(\"#dataCircle\")\n            .attr(\"view\", \"episode\")\n            .transition().duration(duration)\n              .attr(\"cx\", d => episodeX(d.episode));\n              // .style(\"opacity\", function(this: any) {\n              //   if (d3.select(this).attr(\"focused\") === \"false\") {\n              //     return \"0\";\n              //   }\n              //   return \"0.7\";\n              // });\n      // }\n\n    }\n\n\n    function toChapterView(chapter_order?, duration=800) {\n      const margin = {top: 80, right: 150, bottom: 80, left: 80},\n            width = 1200 - margin.left - margin.right,\n            height = 600 - margin.top - margin.bottom;\n\n      const svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n\n      var chapterXaxis = {};\n\n      chapter_order?.map((d, i) => {\n        if (!(d in chapterXaxis)) {\n          chapterXaxis[d] = i+1;\n        }\n      });\n\n      const NUM_CHAPTERS = Object.keys(chapterXaxis).length;\n\n      const chapterX = d3.scaleLinear()\n                  .domain([0, NUM_CHAPTERS+1])\n                  .range([0, width]);\n\n      const xAxis = d3.select(\"#myXaxis\");\n\n      var tick_strings = {};\n      Object.keys(chapterXaxis).map((d, i) => {\n        tick_strings[i+1] = d;\n      });\n\n      xAxis.transition().duration(duration)\n            .call(d3.axisBottom(chapterX)\n                    .ticks(NUM_CHAPTERS)\n                    .tickFormat(d =>tick_strings[d]));\n\n      svg.selectAll(\"#dataCircle\")\n          .attr(\"view\", \"chapter\")\n          // .attr(\"focused\", true)\n          .transition().duration(duration)\n            // .style(\"opacity\", \"0.7\")\n            // .style(\"pointer-events\", \"auto\")\n            .attr(\"cx\", d => chapterX(chapterXaxis[d.chapter]));\n    }\n  }\n\n\n\n  // private swapShowNonfocused(duration=400) {\n  //   const svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n\n  //   svg.selectAll(\"#dataCircle\")\n  //       .transition().duration(duration)\n  //       .style(\"opacity\", function(this: any) {\n  //         if (d3.select(this).attr(\"focused\") === \"false\") {\n  //           if (d3.select(this).style(\"opacity\") === \"0.7\") {\n  //             return \"0\";\n  //           }\n  //         }\n  //         return \"0.7\";\n  //       })\n  //       .style(\"pointer-events\", function(this: any) {\n  //         if (d3.select(this).attr(\"focused\") === \"false\") {\n  //           if (d3.select(this).style(\"pointer-events\") === \"auto\") {\n  //             return \"none\";\n  //           }\n  //         }\n  //         return \"auto\";\n  //       });\n  //   svg.selectAll(\"#dataCircle\")\n  //       .transition().duration(duration)\n  //       .style(\"opacity\", \"0.7\")\n  //       .style(\"pointer-events\", \"auto\");\n\n  //   d3.select(\"#chapter_button_container\")\n  //     .selectAll(\".ripple_button\")\n  //     .style(\"opacity\", \"1\");\n  // }\n  private showAll(duration=400) {\n    const svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n    svg.selectAll(\"#dataCircle\")\n        .transition().duration(duration)\n        .style(\"opacity\", \"0.7\")\n        .style(\"pointer-events\", \"auto\");\n\n    d3.select(\"#chapter_button_container\")\n      .selectAll(\".ripple_button\")\n      .style(\"opacity\", \"1\");\n  }\n\n  private swapShowChapter(chapter: string, duration=400) {\n    const svg = d3.select(\"#\" + D3_DIV_ID).select(\"svg\").select(\"g\");\n\n    svg.selectAll(\"#dataCircle\")\n        .transition().duration(duration)\n        // .attr(\"focused\", function(this: any, d) {\n        //   if (d.chapter === chapter) {\n        //     if (d3.select(this).attr(\"focused\") === \"true\") {\n        //       return \"false\";\n        //     }\n        //     else {\n        //       return \"true\";\n        //     }\n        //   }\n        //   return d3.select(this).attr(\"focused\");\n        // })\n        .style(\"opacity\", function(this: any, d) {\n          if (d.chapter === chapter) {\n            if (d3.select(this).style(\"opacity\") === \"0.7\") {\n              return \"0\";\n            }\n            return \"0.7\";\n          }\n          return d3.select(this).style(\"opacity\");\n        })\n        .style(\"pointer-events\", function(this: any, d) {\n          if (d.chapter === chapter) {\n            if (d3.select(this).style(\"pointer-events\") === \"auto\") {\n              return \"none\";\n            }\n            return \"auto\"\n          }\n          return d3.select(this).style(\"pointer-events\");\n        });\n  }\n}\n\n\nexport default withStreamlitConnection(BubbleComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport BubbleComponent from \"./BubbleComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BubbleComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}